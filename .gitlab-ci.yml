stages:
  - build
  - deploy

build_develop:
  stage: build
  image: alpine:latest
  only:
    - merge_requests
    - develop
  tags:
    - docker-exec
  artifacts:
    paths:
      - develop_build/
  before_script:
    - apk add yarn
  script:
    - yarn install
    - yarn build:dev
    - mv -v build ./develop_build

build_5_1:
  stage: build
  image: alpine:latest
  only:
    - develop
  tags:
    - docker-exec
  artifacts:
    paths:
      - 5_1_build/
  before_script:
    - apk add yarn
  script:
    - yarn install
    - yarn build
    - mv -v build ./5_1_build

upload_build:
  stage: deploy
  image: alpine:latest
  only:
    - develop
  tags:
    - docker-exec
  dependencies:
    - build_develop
    - build_5_1
  script:
    - apk add zip openssh-client
    - mkdir -p ~/.ssh
    - echo "${DEPLOY_KNOWN_HOSTS}" > ~/.ssh/known_hosts
    - echo "${DEPLOY_PUBKEY}" > ~/.ssh/id_rsa.pub
    - echo "${DEPLOY_PRIVKEY}" > ~/.ssh/id_rsa
    - chmod 700 ~/.ssh
    - chmod 600 ~/.ssh/id_rsa
    - chmod 644 ~/.ssh/id_rsa.pub ~/.ssh/known_hosts

    - mkdir -p ./develop/webapp
    - mv -f develop_build/* ./develop/webapp/
    - zip -r qorus-webapp-develop.zip develop
    - scp qorus-webapp-develop.zip ${DEPLOY_USER}@${DEPLOY_HOST}:${DEPLOY_PATH}/

    - mkdir -p ./5_1/webapp
    - mv -f 5_1_build/* ./5_1/webapp/
    - zip -r qorus-webapp-5_1.zip 5_1
    - scp qorus-webapp-5_1.zip ${DEPLOY_USER}@${DEPLOY_HOST}:${DEPLOY_PATH}/
