{ "name" : "array_test_f1", "version" : "1.0", "author" : "Qore Technologies, sro", "steptype" : "NORMAL", "stepfunction_instanceid" : 51, "validationfunction_instanceid" : 64, "arrayfunction_instanceid" : 50, "arraytype" : "SERIES", "created" : "2012-12-16 17:06:15.000000 +01:00", "stepid" : 39, "typedesc" : "NORMAL ARRAY", "functions" : [ { "type" : "primary", "name" : "array_test_f1", "version" : "1.0", "function_instanceid" : 51, "function_type" : "STEP", "description" : "array test f1", "author" : "Qore Technologies, sro", "body" : "sub array_test_f1($element) {\n    #log(LL_INFO, \"workflow metadata=%n\", getWorkflowMetadata());\n    my $si = getStepInfo();\n    setCustomStatus(\"1\");\n    log(LL_INFO, \"element %d/%d = %n\", $si.index + 1, $si.array_size, $element);\n    doTest();\n}\n", "created" : "2012-12-16 17:06:13.000000 +01:00", "modified" : "2014-10-06 09:41:36.000000 +02:00", "createdby" : "omq", "modifiedby" : "omq", "tags" : {  }, "source" : "/export/home/dnichols/src/Qorus/svn/trunk/test/TEST-WORKFLOWS/test-functions-v1.0.qfd", "offset" : "71", "host" : "manatee.prague.qoretechnologies.com", "user" : "<shell-unknown>" }, { "type" : "validation", "name" : "test_validation", "version" : "1.0", "function_instanceid" : 64, "function_type" : "VALIDATION", "description" : "validation test function", "author" : "Qore Technologies, sro", "body" : "sub test_validation($arg) {\n    log(LL_INFO, \"stepInfo=%n\", getStepInfo());\n\n    if (exists $arg)\n\tlog(LL_INFO, \"validation arg=%n\", $arg);\n\n    my $stat;\n\n    if (getStepInfo().name =~ /asyncxxxx/)\n\t$stat = OMQ::StatAsyncWaiting;\n    else {\n\t# 75% chance of setting the step to complete\n\tif (getOption(\"fast-exec\") || getOption(\"no-errors\") || rand() % 4)\n\t    $stat = OMQ::StatComplete;\n\telse {\n\t    my $a = rand() % 10;\n\t    if (!$a)\n\t\t$stat = OMQ::StatError;\n\t    else if ($a < 4)\n\t\t$stat = OMQ::StatAsyncWaiting;\n\t    else if ($a < 8)\n\t\t$stat = OMQ::StatRetry;\n\t    else if ($a == 9) {\n\t\tif (rand() % 2)\n\t\t    serror(\"TEST-VALIDATION-ERROR\");\n\t\telse\n\t\t    throw \"TEST-EXCEPTION\"; \n\t    }\n\t}\n    }\n    #log(LL_INFO, \"returning %N\", $stat);\n    return $stat;\n}\n", "created" : "2012-12-16 17:06:13.000000 +01:00", "modified" : "2014-10-06 09:41:36.000000 +02:00", "createdby" : "omq", "modifiedby" : "omq", "tags" : {  }, "source" : "/export/home/dnichols/src/Qorus/svn/trunk/test/TEST-WORKFLOWS/test-functions-v1.0.qfd", "offset" : "275", "host" : "manatee.prague.qoretechnologies.com", "user" : "<shell-unknown>" }, { "type" : "array", "name" : "array_test_array", "version" : "1.0", "function_instanceid" : 50, "function_type" : "ARRAY", "description" : "array function test", "author" : "Qore Technologies, sro", "body" : "sub array_test_array() {\n    if (getOption(\"fast-exec\"))\n\treturn True;\n\n    # 1 out of 10 times throw an error\n    if (!getOption(\"no-errors\")) {\n\tif (!(rand() % 10))\n\t    serror(\"TEST-ERROR\");\n\n\t# another chance: 1/10 return NOTHING\n\tif (!(rand() % 10))\n\t    return;\n    }\n\n    # otherwise get array from stepname\n    my $key = getStepInfo().name;\n    my $array = getDynamicData($key);\n    \n    if (!exists $array) {\n\tmy $r = (rand() % 10);\n\n\tfor (my $i; $i < $r; $i++)\n\t    $array[$i] = ( \"key1\" : rand() % 20,\n\t\t\t   \"key2\" : \"this is key2\",\n\t\t\t   \"index\" : $i );\n\tmy $h.$key = $array;\n\tupdateDynamicData($h);\n    }\n    return $array;\n}\n", "created" : "2012-12-16 17:06:13.000000 +01:00", "modified" : "2014-10-06 09:41:36.000000 +02:00", "createdby" : "omq", "modifiedby" : "omq", "tags" : {  }, "source" : "/export/home/dnichols/src/Qorus/svn/trunk/test/TEST-WORKFLOWS/test-functions-v1.0.qfd", "offset" : "35", "host" : "manatee.prague.qoretechnologies.com", "user" : "<shell-unknown>" } ], "description" : "array test f1" }