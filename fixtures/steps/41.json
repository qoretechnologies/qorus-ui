{ "name" : "array_subworkflow", "version" : "2.0", "author" : "Qore Technologies, sro", "steptype" : "SUBWORKFLOW", "stepfunction_instanceid" : 58, "arrayfunction_instanceid" : 50, "arraytype" : "SERIES", "created" : "2012-12-16 17:06:15.000000 +01:00", "stepid" : 41, "typedesc" : "SUBWORKFLOW ARRAY", "functions" : [ { "type" : "primary", "name" : "array_subworkflow", "version" : "2.0", "function_instanceid" : 58, "function_type" : "SUBWORKFLOW", "description" : "subworkflow array test function", "author" : "Qore Technologies, sro", "body" : "sub array_subworkflow($element) {\n    log(LL_INFO, \"element = %n\", $element);\n    \n    # if \"fast-exec\" is set, or a 10% chance of skipping the subworkflow\n    if (getOption(\"fast-exec\") || getOption(\"skip-subworkflow\") || !(rand() % 10)) {\n\tskipSubWorkflow();\n\treturn;\n    }\n    \n    # 20% chance of an error\n    if (!getOption(\"no-errors\") && !(rand() % 5)) {\n\tserror(\"TEST-ERROR\");\n\treturn;\n    }\n\n    my $h.name = \"SIMPLETEST\";\n    $h.version = \"1.0\";\n    \n    # create workflow data\n    my $key = sprintf(\"%s-%d-%d\", getStepInfo().name, \n\t\t      getWorkflowInstanceData(\"workflow_instanceid\"), \n\t\t      getStepInfo().index);\n\t\n    my $data.external_order_instanceid = $key;\n    $data.staticdata.data = $element;\n\n    bindSubWorkflow($h, $data);\n}\n", "created" : "2012-12-16 17:06:13.000000 +01:00", "modified" : "2014-10-06 09:41:36.000000 +02:00", "createdby" : "omq", "modifiedby" : "omq", "tags" : {  }, "source" : "/export/home/dnichols/src/Qorus/svn/trunk/test/TEST-WORKFLOWS/test-functions-v1.0.qfd", "offset" : "161", "host" : "manatee.prague.qoretechnologies.com", "user" : "<shell-unknown>" }, { "type" : "array", "name" : "array_test_array", "version" : "1.0", "function_instanceid" : 50, "function_type" : "ARRAY", "description" : "array function test", "author" : "Qore Technologies, sro", "body" : "sub array_test_array() {\n    if (getOption(\"fast-exec\"))\n\treturn True;\n\n    # 1 out of 10 times throw an error\n    if (!getOption(\"no-errors\")) {\n\tif (!(rand() % 10))\n\t    serror(\"TEST-ERROR\");\n\n\t# another chance: 1/10 return NOTHING\n\tif (!(rand() % 10))\n\t    return;\n    }\n\n    # otherwise get array from stepname\n    my $key = getStepInfo().name;\n    my $array = getDynamicData($key);\n    \n    if (!exists $array) {\n\tmy $r = (rand() % 10);\n\n\tfor (my $i; $i < $r; $i++)\n\t    $array[$i] = ( \"key1\" : rand() % 20,\n\t\t\t   \"key2\" : \"this is key2\",\n\t\t\t   \"index\" : $i );\n\tmy $h.$key = $array;\n\tupdateDynamicData($h);\n    }\n    return $array;\n}\n", "created" : "2012-12-16 17:06:13.000000 +01:00", "modified" : "2014-10-06 09:41:36.000000 +02:00", "createdby" : "omq", "modifiedby" : "omq", "tags" : {  }, "source" : "/export/home/dnichols/src/Qorus/svn/trunk/test/TEST-WORKFLOWS/test-functions-v1.0.qfd", "offset" : "35", "host" : "manatee.prague.qoretechnologies.com", "user" : "<shell-unknown>" } ], "description" : "subworkflow array test function" }